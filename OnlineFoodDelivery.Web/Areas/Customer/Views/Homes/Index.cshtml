@* @model IEnumerable<OnlineFoodDelivery.Web.ViewModels.ItemViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<h1 class="mb-4">Food Items</h1>



<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-lg-4 col-md-6 mb-4">
            <div class="card">

                <div class="card-body">
                    <h5 class="card-title">@item.Title</h5>
                    <p class="card-text">
                        @{
                            if (item.Image != null)
                            {
                                var base64 = Convert.ToBase64String(item.Image);
                                var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                                <img src="@imgsrc" height="150" width="150" style="border-radius:100%; align-items:center" />
                            }
                        }
                    </p>
                    <p class="card-text">@item.Description</p>
                    <p class="card-text"><strong>Price: </strong>@item.Price</p>
                </div>
                <div class="card-footer">
                    <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-primary btn-sm">Details</a>
                </div>
            </div>
        </div>
    }
</div>

 *@
 @model OnlineFoodDelivery.Web.ViewModels.ItemCategoryViewModel

@{
    ViewData["Title"] = "Items";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <style>
        /* Dark theme styles */
        body {
            background-color: #343a40;
            color: #fff;
            font-family: Arial, sans-serif;
            margin-bottom: 60px;
            padding: 0;
        }

        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 0 15px;
        }

        .mb-4 {
            margin-bottom: 1.5rem;
        }

        .text-center {
            text-align: center;
        }

        .text-white {
            color: #fff;
        }

        .form-control {
            background-color: #666;
            color: #fff;
        }

            .form-control::placeholder {
                color: #ced4da;
            }

        .btn-primary {
            background-color: #edf2f4;
            border-color: #edf2f4;
            color: black;
        }

            .btn-primary:hover {
                background-color: #669bbc;
                border-color: #669bbc;
            }

        .card {
            background-color: #495057;
            border: none;
            margin-bottom: 1.5rem;
            height: 430px;
        }

        .card-title {
            color: #fff;
            font-weight: 400;
        }

        .card-text, .card-footer {
            color: #ced4da;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="mb-4 text-center">Food Items</h1>

        @* Dropdown list to select category *@
        @using (Html.BeginForm("Index", "Homes", FormMethod.Get))
        {
            <div class="mb-4">
                <label for="categoryId" class="text-white">Select Category:</label>
                <select id="categoryId" name="categoryId" class="form-control">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Id">@category.Title</option>
                    }
                </select>
                <button type="submit" class="btn btn-primary mt-2">Filter</button>
            </div>
        }

        <div class="row" id="itemList">
            @foreach (var item in Model.Items)
            {
                <div class="col-lg-4 col-md-4 col-sm-6 mb-4">
                    <div class="card" >
                        <div class="card-body">
                            <h5 class="card-title" style="margin-bottom:20px;"><b>@item.Title</b></h5>
                            <p class="card-text">
                                @{
                                    if (item.Image != null)
                                    {
                                        var base64 = Convert.ToBase64String(item.Image);
                                        var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                                        <img src="@imgsrc" height="150" width="150" class="rounded-circle mx-auto d-block" />
                                    }
                                }
                            </p>
                            <p class="card-text">@item.Description</p>
                            <p class="card-text"><strong class="text-white">₹ </strong>@item.Price</p>
                        </div>
                        <div class="card-footer">
                            <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-primary btn-sm">Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</body>
</html>